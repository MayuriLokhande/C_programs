
main:     file format elf64-x86-64
main
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001060

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000002d8 memsz 0x00000000000002d8 flags r--
  INTERP off    0x0000000000000318 vaddr 0x0000000000000318 paddr 0x0000000000000318 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000600 memsz 0x0000000000000600 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x0000000000000295 memsz 0x0000000000000295 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x0000000000000258 memsz 0x0000000000000258 flags r--
    LOAD off    0x0000000000002db8 vaddr 0x0000000000003db8 paddr 0x0000000000003db8 align 2**12
         filesz 0x0000000000000258 memsz 0x0000000000000260 flags rw-
 DYNAMIC off    0x0000000000002dc8 vaddr 0x0000000000003dc8 paddr 0x0000000000003dc8 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
    NOTE off    0x0000000000000358 vaddr 0x0000000000000358 paddr 0x0000000000000358 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
0x6474e553 off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x0000000000002068 vaddr 0x0000000000002068 paddr 0x0000000000002068 align 2**2
         filesz 0x0000000000000064 memsz 0x0000000000000064 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002db8 vaddr 0x0000000000003db8 paddr 0x0000000000003db8 align 2**0
         filesz 0x0000000000000248 memsz 0x0000000000000248 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x0000000000001288
  INIT_ARRAY           0x0000000000003db8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003dc0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000003a0
  STRTAB               0x0000000000000470
  SYMTAB               0x00000000000003c8
  STRSZ                0x0000000000000084
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003fb8
  PLTRELSZ             0x0000000000000018
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000005e8
  RELA                 0x0000000000000528
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000508
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000004f4
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000020  0000000000000338  0000000000000338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000358  0000000000000358  00000358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000000037c  000000000000037c  0000037c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000024  00000000000003a0  00000000000003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000000a8  00000000000003c8  00000000000003c8  000003c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000084  0000000000000470  0000000000000470  00000470  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  0000000e  00000000000004f4  00000000000004f4  000004f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000020  0000000000000508  0000000000000508  00000508  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000c0  0000000000000528  0000000000000528  00000528  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000018  00000000000005e8  00000000000005e8  000005e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000020  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .plt.got      00000010  0000000000001040  0000000000001040  00001040  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .plt.sec      00000010  0000000000001050  0000000000001050  00001050  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text         00000225  0000000000001060  0000000000001060  00001060  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .fini         0000000d  0000000000001288  0000000000001288  00001288  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .rodata       00000066  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .eh_frame_hdr 00000064  0000000000002068  0000000000002068  00002068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .eh_frame     00000188  00000000000020d0  00000000000020d0  000020d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .init_array   00000008  0000000000003db8  0000000000003db8  00002db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .fini_array   00000008  0000000000003dc0  0000000000003dc0  00002dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      000001f0  0000000000003dc8  0000000000003dc8  00002dc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000048  0000000000003fb8  0000000000003fb8  00002fb8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000010  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000008  0000000000004010  0000000000004010  00003010  2**0
                  ALLOC
 26 .comment      0000002a  0000000000000000  0000000000000000  00003010  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000318 l    d  .interp	0000000000000000              .interp
0000000000000338 l    d  .note.gnu.property	0000000000000000              .note.gnu.property
0000000000000358 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
000000000000037c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000003a0 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000003c8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000470 l    d  .dynstr	0000000000000000              .dynstr
00000000000004f4 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000508 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000528 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000005e8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
0000000000001040 l    d  .plt.got	0000000000000000              .plt.got
0000000000001050 l    d  .plt.sec	0000000000000000              .plt.sec
0000000000001060 l    d  .text	0000000000000000              .text
0000000000001288 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
0000000000002068 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000020d0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003db8 l    d  .init_array	0000000000000000              .init_array
0000000000003dc0 l    d  .fini_array	0000000000000000              .fini_array
0000000000003dc8 l    d  .dynamic	0000000000000000              .dynamic
0000000000003fb8 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
0000000000004010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001090 l     F .text	0000000000000000              deregister_tm_clones
00000000000010c0 l     F .text	0000000000000000              register_tm_clones
0000000000001100 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004010 l     O .bss	0000000000000001              completed.8060
0000000000003dc0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001140 l     F .text	0000000000000000              frame_dummy
0000000000003db8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              a.c
0000000000001149 l     F .text	0000000000000023              test
000000000000202e l     O .rodata	0000000000000005              __func__.2315
0000000000002033 l     O .rodata	0000000000000002              __func__.2318
0000000000000000 l    df *ABS*	0000000000000000              b.c
0000000000001199 l     F .text	0000000000000023              test
000000000000205f l     O .rodata	0000000000000005              __func__.2315
0000000000002064 l     O .rodata	0000000000000002              __func__.2318
0000000000000000 l    df *ABS*	0000000000000000              main.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000002254 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003dc0 l       .init_array	0000000000000000              __init_array_end
0000000000003dc8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003db8 l       .init_array	0000000000000000              __init_array_start
0000000000002068 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003fb8 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
0000000000001280 g     F .text	0000000000000005              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004000  w      .data	0000000000000000              data_start
00000000000011bc g     F .text	000000000000002d              b
0000000000004010 g       .data	0000000000000000              _edata
0000000000001288 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000001210 g     F .text	0000000000000065              __libc_csu_init
0000000000004018 g       .bss	0000000000000000              _end
0000000000001060 g     F .text	000000000000002f              _start
000000000000116c g     F .text	000000000000002d              a
0000000000004010 g       .bss	0000000000000000              __bss_start
00000000000011e9 g     F .text	0000000000000023              main
0000000000004010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5



Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 23                	add    %ah,(%rbx)
 369:	52                   	push   %rdx
 36a:	8c 1d f4 e2 81 30    	mov    %ds,0x3081e2f4(%rip)        # 3081e664 <_end+0x3081a64c>
 370:	3c ae                	cmp    $0xae,%al
 372:	0b 22                	or     (%rdx),%esp
 374:	af                   	scas   %es:(%rdi),%eax
 375:	5f                   	pop    %rdi
 376:	07                   	(bad)  
 377:	34 f2                	xor    $0xf2,%al
 379:	6a 54                	pushq  $0x54
 37b:	4d                   	rex.WRB

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	06                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 06                	add    %al,(%rsi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	3f                   	(bad)  
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 21                	add    %ah,(%rcx)
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 5b 00             	add    %bl,0x0(%rbx)
 42a:	00 00                	add    %al,(%rax)
 42c:	20 00                	and    %al,(%rax)
	...
 43e:	00 00                	add    %al,(%rax)
 440:	6a 00                	pushq  $0x0
 442:	00 00                	add    %al,(%rax)
 444:	20 00                	and    %al,(%rax)
	...
 456:	00 00                	add    %al,(%rax)
 458:	12 00                	adc    (%rax),%al
 45a:	00 00                	add    %al,(%rax)
 45c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000470 <.dynstr>:
 470:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 474:	63 2e                	movslq (%rsi),%ebp
 476:	73 6f                	jae    4e7 <_init-0xb19>
 478:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 47d:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 484:	63 78 61             	movslq 0x61(%rax),%edi
 487:	5f                   	pop    %rdi
 488:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 48e:	7a 65                	jp     4f5 <_init-0xb0b>
 490:	00 5f 5f             	add    %bl,0x5f(%rdi)
 493:	6c                   	insb   (%dx),%es:(%rdi)
 494:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 49b:	72 74                	jb     511 <_init-0xaef>
 49d:	5f                   	pop    %rdi
 49e:	6d                   	insl   (%dx),%es:(%rdi)
 49f:	61                   	(bad)  
 4a0:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 4a7:	43 5f                	rex.XB pop %r15
 4a9:	32 2e                	xor    (%rsi),%ch
 4ab:	32 2e                	xor    (%rsi),%ch
 4ad:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 4b2:	4d 5f                	rex.WRB pop %r15
 4b4:	64 65 72 65          	fs gs jb 51d <_init-0xae3>
 4b8:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4bf:	4d 
 4c0:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4c2:	6f                   	outsl  %ds:(%rsi),(%dx)
 4c3:	6e                   	outsb  %ds:(%rsi),(%dx)
 4c4:	65 54                	gs push %rsp
 4c6:	61                   	(bad)  
 4c7:	62                   	(bad)  
 4c8:	6c                   	insb   (%dx),%es:(%rdi)
 4c9:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4cd:	67 6d                	insl   (%dx),%es:(%edi)
 4cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 4d1:	5f                   	pop    %rdi
 4d2:	73 74                	jae    548 <_init-0xab8>
 4d4:	61                   	(bad)  
 4d5:	72 74                	jb     54b <_init-0xab5>
 4d7:	5f                   	pop    %rdi
 4d8:	5f                   	pop    %rdi
 4d9:	00 5f 49             	add    %bl,0x49(%rdi)
 4dc:	54                   	push   %rsp
 4dd:	4d 5f                	rex.WRB pop %r15
 4df:	72 65                	jb     546 <_init-0xaba>
 4e1:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4e8:	4d 
 4e9:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4eb:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ec:	6e                   	outsb  %ds:(%rsi),(%dx)
 4ed:	65 54                	gs push %rsp
 4ef:	61                   	(bad)  
 4f0:	62                   	.byte 0x62
 4f1:	6c                   	insb   (%dx),%es:(%rdi)
 4f2:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004f4 <.gnu.version>:
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	02 00                	add    (%rax),%al
 4fa:	02 00                	add    (%rax),%al
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000508 <.gnu.version_r>:
 508:	01 00                	add    %eax,(%rax)
 50a:	01 00                	add    %eax,(%rax)
 50c:	01 00                	add    %eax,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	10 00                	adc    %al,(%rax)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	75 1a                	jne    534 <_init-0xacc>
 51a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 520:	33 00                	xor    (%rax),%eax
 522:	00 00                	add    %al,(%rax)
 524:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000528 <.rela.dyn>:
 528:	b8 3d 00 00 00       	mov    $0x3d,%eax
 52d:	00 00                	add    %al,(%rax)
 52f:	00 08                	add    %cl,(%rax)
 531:	00 00                	add    %al,(%rax)
 533:	00 00                	add    %al,(%rax)
 535:	00 00                	add    %al,(%rax)
 537:	00 40 11             	add    %al,0x11(%rax)
 53a:	00 00                	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 547 <_init-0xab9>
 547:	00 08                	add    %cl,(%rax)
	...
 551:	11 00                	adc    %eax,(%rax)
 553:	00 00                	add    %al,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 08                	add    %cl,(%rax)
 559:	40 00 00             	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	08 00                	or     %al,(%rax)
 562:	00 00                	add    %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	08 40 00             	or     %al,0x0(%rax)
 56b:	00 00                	add    %al,(%rax)
 56d:	00 00                	add    %al,(%rax)
 56f:	00 d8                	add    %bl,%al
 571:	3f                   	(bad)  
 572:	00 00                	add    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	06                   	(bad)  
 579:	00 00                	add    %al,(%rax)
 57b:	00 01                	add    %al,(%rcx)
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 e0                	add    %ah,%al
 589:	3f                   	(bad)  
 58a:	00 00                	add    %al,(%rax)
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	06                   	(bad)  
 591:	00 00                	add    %al,(%rax)
 593:	00 03                	add    %al,(%rbx)
	...
 59d:	00 00                	add    %al,(%rax)
 59f:	00 e8                	add    %ch,%al
 5a1:	3f                   	(bad)  
 5a2:	00 00                	add    %al,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	06                   	(bad)  
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5b6:	00 00                	add    %al,(%rax)
 5b8:	f0 3f                	lock (bad) 
 5ba:	00 00                	add    %al,(%rax)
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	06                   	(bad)  
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5c9 <_init-0xa37>
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 f8                	add    %bh,%al
 5d1:	3f                   	(bad)  
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	06                   	(bad)  
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

00000000000005e8 <.rela.plt>:
 5e8:	d0 3f                	sarb   (%rdi)
 5ea:	00 00                	add    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	07                   	(bad)  
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <printf@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 06 02 00 00 	lea    0x206(%rip),%r8        # 1280 <__libc_csu_fini>
    107a:	48 8d 0d 8f 01 00 00 	lea    0x18f(%rip),%rcx        # 1210 <__libc_csu_init>
    1081:	48 8d 3d 61 01 00 00 	lea    0x161(%rip),%rdi        # 11e9 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <test>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 8d 35 d6 0e 00 00 	lea    0xed6(%rip),%rsi        # 202e <__func__.2315>
    1158:	48 8d 3d a5 0e 00 00 	lea    0xea5(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    115f:	b8 00 00 00 00       	mov    $0x0,%eax
    1164:	e8 e7 fe ff ff       	callq  1050 <printf@plt>
    1169:	90                   	nop
    116a:	5d                   	pop    %rbp
    116b:	c3                   	retq   

000000000000116c <a>:
    116c:	f3 0f 1e fa          	endbr64 
    1170:	55                   	push   %rbp
    1171:	48 89 e5             	mov    %rsp,%rbp
    1174:	48 8d 35 b8 0e 00 00 	lea    0xeb8(%rip),%rsi        # 2033 <__func__.2318>
    117b:	48 8d 3d 97 0e 00 00 	lea    0xe97(%rip),%rdi        # 2019 <_IO_stdin_used+0x19>
    1182:	b8 00 00 00 00       	mov    $0x0,%eax
    1187:	e8 c4 fe ff ff       	callq  1050 <printf@plt>
    118c:	b8 00 00 00 00       	mov    $0x0,%eax
    1191:	e8 b3 ff ff ff       	callq  1149 <test>
    1196:	90                   	nop
    1197:	5d                   	pop    %rbp
    1198:	c3                   	retq   

0000000000001199 <test>:
    1199:	f3 0f 1e fa          	endbr64 
    119d:	55                   	push   %rbp
    119e:	48 89 e5             	mov    %rsp,%rbp
    11a1:	48 8d 35 b7 0e 00 00 	lea    0xeb7(%rip),%rsi        # 205f <__func__.2315>
    11a8:	48 8d 3d 86 0e 00 00 	lea    0xe86(%rip),%rdi        # 2035 <__func__.2318+0x2>
    11af:	b8 00 00 00 00       	mov    $0x0,%eax
    11b4:	e8 97 fe ff ff       	callq  1050 <printf@plt>
    11b9:	90                   	nop
    11ba:	5d                   	pop    %rbp
    11bb:	c3                   	retq   

00000000000011bc <b>:
    11bc:	f3 0f 1e fa          	endbr64 
    11c0:	55                   	push   %rbp
    11c1:	48 89 e5             	mov    %rsp,%rbp
    11c4:	48 8d 35 99 0e 00 00 	lea    0xe99(%rip),%rsi        # 2064 <__func__.2318>
    11cb:	48 8d 3d 78 0e 00 00 	lea    0xe78(%rip),%rdi        # 204a <__func__.2318+0x17>
    11d2:	b8 00 00 00 00       	mov    $0x0,%eax
    11d7:	e8 74 fe ff ff       	callq  1050 <printf@plt>
    11dc:	b8 00 00 00 00       	mov    $0x0,%eax
    11e1:	e8 b3 ff ff ff       	callq  1199 <test>
    11e6:	90                   	nop
    11e7:	5d                   	pop    %rbp
    11e8:	c3                   	retq   

00000000000011e9 <main>:
    11e9:	f3 0f 1e fa          	endbr64 
    11ed:	55                   	push   %rbp
    11ee:	48 89 e5             	mov    %rsp,%rbp
    11f1:	b8 00 00 00 00       	mov    $0x0,%eax
    11f6:	e8 71 ff ff ff       	callq  116c <a>
    11fb:	b8 00 00 00 00       	mov    $0x0,%eax
    1200:	e8 b7 ff ff ff       	callq  11bc <b>
    1205:	b8 00 00 00 00       	mov    $0x0,%eax
    120a:	5d                   	pop    %rbp
    120b:	c3                   	retq   
    120c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001210 <__libc_csu_init>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	41 57                	push   %r15
    1216:	4c 8d 3d 9b 2b 00 00 	lea    0x2b9b(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    121d:	41 56                	push   %r14
    121f:	49 89 d6             	mov    %rdx,%r14
    1222:	41 55                	push   %r13
    1224:	49 89 f5             	mov    %rsi,%r13
    1227:	41 54                	push   %r12
    1229:	41 89 fc             	mov    %edi,%r12d
    122c:	55                   	push   %rbp
    122d:	48 8d 2d 8c 2b 00 00 	lea    0x2b8c(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    1234:	53                   	push   %rbx
    1235:	4c 29 fd             	sub    %r15,%rbp
    1238:	48 83 ec 08          	sub    $0x8,%rsp
    123c:	e8 bf fd ff ff       	callq  1000 <_init>
    1241:	48 c1 fd 03          	sar    $0x3,%rbp
    1245:	74 1f                	je     1266 <__libc_csu_init+0x56>
    1247:	31 db                	xor    %ebx,%ebx
    1249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1250:	4c 89 f2             	mov    %r14,%rdx
    1253:	4c 89 ee             	mov    %r13,%rsi
    1256:	44 89 e7             	mov    %r12d,%edi
    1259:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    125d:	48 83 c3 01          	add    $0x1,%rbx
    1261:	48 39 dd             	cmp    %rbx,%rbp
    1264:	75 ea                	jne    1250 <__libc_csu_init+0x40>
    1266:	48 83 c4 08          	add    $0x8,%rsp
    126a:	5b                   	pop    %rbx
    126b:	5d                   	pop    %rbp
    126c:	41 5c                	pop    %r12
    126e:	41 5d                	pop    %r13
    1270:	41 5e                	pop    %r14
    1272:	41 5f                	pop    %r15
    1274:	c3                   	retq   
    1275:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    127c:	00 00 00 00 

0000000000001280 <__libc_csu_fini>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	c3                   	retq   

Disassembly of section .fini:

0000000000001288 <_fini>:
    1288:	f3 0f 1e fa          	endbr64 
    128c:	48 83 ec 08          	sub    $0x8,%rsp
    1290:	48 83 c4 08          	add    $0x8,%rsp
    1294:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	74 68                	je     206e <__GNU_EH_FRAME_HDR+0x6>
    2006:	69 73 20 69 73 20 66 	imul   $0x66207369,0x20(%rbx),%esi
    200d:	75 6e                	jne    207d <__GNU_EH_FRAME_HDR+0x15>
    200f:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    2013:	6e                   	outsb  %ds:(%rsi),(%dx)
    2014:	20 25 73 0a 00 54    	and    %ah,0x54000a73(%rip)        # 54002a8d <_end+0x53ffea75>
    201a:	68 69 73 20 69       	pushq  $0x69207369
    201f:	73 20                	jae    2041 <__func__.2318+0xe>
    2021:	66 75 6e             	data16 jne 2092 <__GNU_EH_FRAME_HDR+0x2a>
    2024:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    2028:	6e                   	outsb  %ds:(%rsi),(%dx)
    2029:	20 25 73 0a 00     	and    %ah,0x74000a73(%rip)        # 74002aa2 <_end+0x73ffea8a>

000000000000202e <__func__.2315>:
    202e:	74 65                	je     2095 <__GNU_EH_FRAME_HDR+0x2d>
    2030:	73 74                	jae    20a6 <__GNU_EH_FRAME_HDR+0x3e>
	...

0000000000002033 <__func__.2318>:
    2033:	61                   	(bad)  
    2034:	00 74 68 69          	add    %dh,0x69(%rax,%rbp,2)
    2038:	73 20                	jae    205a <__func__.2318+0x27>
    203a:	69 73 20 66 75 6e 63 	imul   $0x636e7566,0x20(%rbx),%esi
    2041:	74 69                	je     20ac <__GNU_EH_FRAME_HDR+0x44>
    2043:	6f                   	outsl  %ds:(%rsi),(%dx)
    2044:	6e                   	outsb  %ds:(%rsi),(%dx)
    2045:	20 25 73 0a 00 54    	and    %ah,0x54000a73(%rip)        # 54002abe <_end+0x53ffeaa6>
    204b:	68 69 73 20 69       	pushq  $0x69207369
    2050:	73 20                	jae    2072 <__GNU_EH_FRAME_HDR+0xa>
    2052:	66 75 6e             	data16 jne 20c3 <__GNU_EH_FRAME_HDR+0x5b>
    2055:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    2059:	6e                   	outsb  %ds:(%rsi),(%dx)
    205a:	20 25 73 0a 00     	and    %ah,0x74000a73(%rip)        # 74002ad3 <_end+0x73ffeabb>

000000000000205f <__func__.2315>:
    205f:	74 65                	je     20c6 <__GNU_EH_FRAME_HDR+0x5e>
    2061:	73 74                	jae    20d7 <__GNU_EH_FRAME_HDR+0x6f>
	...

0000000000002064 <__func__.2318>:
    2064:	62                   	.byte 0x62
	...

Disassembly of section .eh_frame_hdr:

0000000000002068 <__GNU_EH_FRAME_HDR>:
    2068:	01 1b                	add    %ebx,(%rbx)
    206a:	03 3b                	add    (%rbx),%edi
    206c:	64 00 00             	add    %al,%fs:(%rax)
    206f:	00 0b                	add    %cl,(%rbx)
    2071:	00 00                	add    %al,(%rax)
    2073:	00 b8 ef ff ff 98    	add    %bh,-0x67000011(%rax)
    2079:	00 00                	add    %al,(%rax)
    207b:	00 d8                	add    %bl,%al
    207d:	ef                   	out    %eax,(%dx)
    207e:	ff                   	(bad)  
    207f:	ff c0                	inc    %eax
    2081:	00 00                	add    %al,(%rax)
    2083:	00 e8                	add    %ch,%al
    2085:	ef                   	out    %eax,(%dx)
    2086:	ff                   	(bad)  
    2087:	ff                   	(bad)  
    2088:	d8 00                	fadds  (%rax)
    208a:	00 00                	add    %al,(%rax)
    208c:	f8                   	clc    
    208d:	ef                   	out    %eax,(%dx)
    208e:	ff                   	(bad)  
    208f:	ff 80 00 00 00 e1    	incl   -0x1f000000(%rax)
    2095:	f0 ff                	lock (bad) 
    2097:	ff f0                	push   %rax
    2099:	00 00                	add    %al,(%rax)
    209b:	00 04 f1             	add    %al,(%rcx,%rsi,8)
    209e:	ff                   	(bad)  
    209f:	ff 10                	callq  *(%rax)
    20a1:	01 00                	add    %eax,(%rax)
    20a3:	00 31                	add    %dh,(%rcx)
    20a5:	f1                   	icebp  
    20a6:	ff                   	(bad)  
    20a7:	ff 30                	pushq  (%rax)
    20a9:	01 00                	add    %eax,(%rax)
    20ab:	00 54 f1 ff          	add    %dl,-0x1(%rcx,%rsi,8)
    20af:	ff 50 01             	callq  *0x1(%rax)
    20b2:	00 00                	add    %al,(%rax)
    20b4:	81 f1 ff ff 70 01    	xor    $0x170ffff,%ecx
    20ba:	00 00                	add    %al,(%rax)
    20bc:	a8 f1                	test   $0xf1,%al
    20be:	ff                   	(bad)  
    20bf:	ff 90 01 00 00 18    	callq  *0x18000001(%rax)
    20c5:	f2 ff                	repnz (bad) 
    20c7:	ff                   	(bad)  
    20c8:	d8 01                	fadds  (%rcx)
	...

Disassembly of section .eh_frame:

00000000000020d0 <__FRAME_END__-0x184>:
    20d0:	14 00                	adc    $0x0,%al
    20d2:	00 00                	add    %al,(%rax)
    20d4:	00 00                	add    %al,(%rax)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	01 7a 52             	add    %edi,0x52(%rdx)
    20db:	00 01                	add    %al,(%rcx)
    20dd:	78 10                	js     20ef <__GNU_EH_FRAME_HDR+0x87>
    20df:	01 1b                	add    %ebx,(%rbx)
    20e1:	0c 07                	or     $0x7,%al
    20e3:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20e9:	00 00                	add    %al,(%rax)
    20eb:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20ee:	00 00                	add    %al,(%rax)
    20f0:	70 ef                	jo     20e1 <__GNU_EH_FRAME_HDR+0x79>
    20f2:	ff                   	(bad)  
    20f3:	ff 2f                	ljmp   *(%rdi)
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 00                	add    %al,(%rax)
    20f9:	44 07                	rex.R (bad) 
    20fb:	10 00                	adc    %al,(%rax)
    20fd:	00 00                	add    %al,(%rax)
    20ff:	00 24 00             	add    %ah,(%rax,%rax,1)
    2102:	00 00                	add    %al,(%rax)
    2104:	34 00                	xor    $0x0,%al
    2106:	00 00                	add    %al,(%rax)
    2108:	18 ef                	sbb    %ch,%bh
    210a:	ff                   	(bad)  
    210b:	ff 20                	jmpq   *(%rax)
    210d:	00 00                	add    %al,(%rax)
    210f:	00 00                	add    %al,(%rax)
    2111:	0e                   	(bad)  
    2112:	10 46 0e             	adc    %al,0xe(%rsi)
    2115:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2118:	0b 77 08             	or     0x8(%rdi),%esi
    211b:	80 00 3f             	addb   $0x3f,(%rax)
    211e:	1a 3a                	sbb    (%rdx),%bh
    2120:	2a 33                	sub    (%rbx),%dh
    2122:	24 22                	and    $0x22,%al
    2124:	00 00                	add    %al,(%rax)
    2126:	00 00                	add    %al,(%rax)
    2128:	14 00                	adc    $0x0,%al
    212a:	00 00                	add    %al,(%rax)
    212c:	5c                   	pop    %rsp
    212d:	00 00                	add    %al,(%rax)
    212f:	00 10                	add    %dl,(%rax)
    2131:	ef                   	out    %eax,(%dx)
    2132:	ff                   	(bad)  
    2133:	ff 10                	callq  *(%rax)
	...
    213d:	00 00                	add    %al,(%rax)
    213f:	00 14 00             	add    %dl,(%rax,%rax,1)
    2142:	00 00                	add    %al,(%rax)
    2144:	74 00                	je     2146 <__GNU_EH_FRAME_HDR+0xde>
    2146:	00 00                	add    %al,(%rax)
    2148:	08 ef                	or     %ch,%bh
    214a:	ff                   	(bad)  
    214b:	ff 10                	callq  *(%rax)
	...
    2155:	00 00                	add    %al,(%rax)
    2157:	00 1c 00             	add    %bl,(%rax,%rax,1)
    215a:	00 00                	add    %al,(%rax)
    215c:	8c 00                	mov    %es,(%rax)
    215e:	00 00                	add    %al,(%rax)
    2160:	e9 ef ff ff 23       	jmpq   24002154 <_end+0x23ffe13c>
    2165:	00 00                	add    %al,(%rax)
    2167:	00 00                	add    %al,(%rax)
    2169:	45 0e                	rex.RB (bad) 
    216b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2171:	5a                   	pop    %rdx
    2172:	0c 07                	or     $0x7,%al
    2174:	08 00                	or     %al,(%rax)
    2176:	00 00                	add    %al,(%rax)
    2178:	1c 00                	sbb    $0x0,%al
    217a:	00 00                	add    %al,(%rax)
    217c:	ac                   	lods   %ds:(%rsi),%al
    217d:	00 00                	add    %al,(%rax)
    217f:	00 ec                	add    %ch,%ah
    2181:	ef                   	out    %eax,(%dx)
    2182:	ff                   	(bad)  
    2183:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 2189 <__GNU_EH_FRAME_HDR+0x121>
    2189:	45 0e                	rex.RB (bad) 
    218b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2191:	64 0c 07             	fs or  $0x7,%al
    2194:	08 00                	or     %al,(%rax)
    2196:	00 00                	add    %al,(%rax)
    2198:	1c 00                	sbb    $0x0,%al
    219a:	00 00                	add    %al,(%rax)
    219c:	cc                   	int3   
    219d:	00 00                	add    %al,(%rax)
    219f:	00 f9                	add    %bh,%cl
    21a1:	ef                   	out    %eax,(%dx)
    21a2:	ff                   	(bad)  
    21a3:	ff 23                	jmpq   *(%rbx)
    21a5:	00 00                	add    %al,(%rax)
    21a7:	00 00                	add    %al,(%rax)
    21a9:	45 0e                	rex.RB (bad) 
    21ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21b1:	5a                   	pop    %rdx
    21b2:	0c 07                	or     $0x7,%al
    21b4:	08 00                	or     %al,(%rax)
    21b6:	00 00                	add    %al,(%rax)
    21b8:	1c 00                	sbb    $0x0,%al
    21ba:	00 00                	add    %al,(%rax)
    21bc:	ec                   	in     (%dx),%al
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 fc                	add    %bh,%ah
    21c1:	ef                   	out    %eax,(%dx)
    21c2:	ff                   	(bad)  
    21c3:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 21c9 <__GNU_EH_FRAME_HDR+0x161>
    21c9:	45 0e                	rex.RB (bad) 
    21cb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d1:	64 0c 07             	fs or  $0x7,%al
    21d4:	08 00                	or     %al,(%rax)
    21d6:	00 00                	add    %al,(%rax)
    21d8:	1c 00                	sbb    $0x0,%al
    21da:	00 00                	add    %al,(%rax)
    21dc:	0c 01                	or     $0x1,%al
    21de:	00 00                	add    %al,(%rax)
    21e0:	09 f0                	or     %esi,%eax
    21e2:	ff                   	(bad)  
    21e3:	ff 23                	jmpq   *(%rbx)
    21e5:	00 00                	add    %al,(%rax)
    21e7:	00 00                	add    %al,(%rax)
    21e9:	45 0e                	rex.RB (bad) 
    21eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f1:	5a                   	pop    %rdx
    21f2:	0c 07                	or     $0x7,%al
    21f4:	08 00                	or     %al,(%rax)
    21f6:	00 00                	add    %al,(%rax)
    21f8:	44 00 00             	add    %r8b,(%rax)
    21fb:	00 2c 01             	add    %ch,(%rcx,%rax,1)
    21fe:	00 00                	add    %al,(%rax)
    2200:	10 f0                	adc    %dh,%al
    2202:	ff                   	(bad)  
    2203:	ff 65 00             	jmpq   *0x0(%rbp)
    2206:	00 00                	add    %al,(%rax)
    2208:	00 46 0e             	add    %al,0xe(%rsi)
    220b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2211:	8e 03                	mov    (%rbx),%es
    2213:	45 0e                	rex.RB (bad) 
    2215:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    221b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86303065 <_end+0xffffffff862ff04d>
    2221:	06                   	(bad)  
    2222:	48 0e                	rex.W (bad) 
    2224:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    222a:	6e                   	outsb  %ds:(%rsi),(%dx)
    222b:	0e                   	(bad)  
    222c:	38 41 0e             	cmp    %al,0xe(%rcx)
    222f:	30 41 0e             	xor    %al,0xe(%rcx)
    2232:	28 42 0e             	sub    %al,0xe(%rdx)
    2235:	20 42 0e             	and    %al,0xe(%rdx)
    2238:	18 42 0e             	sbb    %al,0xe(%rdx)
    223b:	10 42 0e             	adc    %al,0xe(%rdx)
    223e:	08 00                	or     %al,(%rax)
    2240:	10 00                	adc    %al,(%rax)
    2242:	00 00                	add    %al,(%rax)
    2244:	74 01                	je     2247 <__GNU_EH_FRAME_HDR+0x1df>
    2246:	00 00                	add    %al,(%rax)
    2248:	38 f0                	cmp    %dh,%al
    224a:	ff                   	(bad)  
    224b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2251 <__GNU_EH_FRAME_HDR+0x1e9>
    2251:	00 00                	add    %al,(%rax)
	...

0000000000002254 <__FRAME_END__>:
    2254:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003db8 <__frame_dummy_init_array_entry>:
    3db8:	40 11 00             	rex adc %eax,(%rax)
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003dc0 <__do_global_dtors_aux_fini_array_entry>:
    3dc0:	00 11                	add    %dl,(%rcx)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003dc8 <_DYNAMIC>:
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	01 00                	add    %eax,(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	0c 00                	or     $0x0,%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	00 10                	add    %dl,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	0d 00 00 00 00       	or     $0x0,%eax
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 88 12 00 00 00    	add    %cl,0x12(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 19                	add    %bl,(%rcx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 1b                	add    %bl,(%rbx)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 08                	add    %cl,(%rax)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 1a                	add    %bl,(%rdx)
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 c0                	add    %al,%al
    3e21:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	1c 00                	sbb    $0x0,%al
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	08 00                	or     %al,(%rax)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	f5                   	cmc    
    3e39:	fe                   	(bad)  
    3e3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e4d <_DYNAMIC+0x85>
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 70 04             	add    %dh,0x4(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	06                   	(bad)  
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 c8                	add    %cl,%al
    3e61:	03 00                	add    (%rax),%eax
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 0a                	add    %cl,(%rdx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 84 00 00 00 00 00 	add    %al,0x0(%rax,%rax,1)
    3e76:	00 00                	add    %al,(%rax)
    3e78:	0b 00                	or     (%rax),%eax
    3e7a:	00 00                	add    %al,(%rax)
    3e7c:	00 00                	add    %al,(%rax)
    3e7e:	00 00                	add    %al,(%rax)
    3e80:	18 00                	sbb    %al,(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	15 00 00 00 00       	adc    $0x0,%eax
	...
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 03                	add    %al,(%rbx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 02                	add    %al,(%rdx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)  
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 17                	add    %dl,(%rdi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 e8                	add    %ch,%al
    3ed1:	05 00 00 00 00       	add    $0x0,%eax
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	07                   	(bad)  
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 28                	add    %ch,(%rax)
    3ee1:	05 00 00 00 00       	add    $0x0,%eax
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	08 00                	or     %al,(%rax)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	c0 00 00             	rolb   $0x0,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 09                	add    %cl,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 18                	add    %bl,(%rax)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 1e                	add    %bl,(%rsi)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 08                	add    %cl,(%rax)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 fb                	add    %bh,%bl
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 01                	add    %al,(%rcx)
    3f21:	00 00                	add    %al,(%rax)
    3f23:	08 00                	or     %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 fe                	add    %bh,%dh
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 08                	add    %cl,(%rax)
    3f31:	05 00 00 00 00       	add    $0x0,%eax
    3f36:	00 00                	add    %al,(%rax)
    3f38:	ff                   	(bad)  
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 01                	add    %al,(%rcx)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	00 00                	add    %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 f0                	add    %dh,%al
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 f4                	add    %dh,%ah
    3f51:	04 00                	add    $0x0,%al
    3f53:	00 00                	add    %al,(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 f9                	add    %bh,%cl
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb8 <_GLOBAL_OFFSET_TABLE_>:
    3fb8:	c8 3d 00 00          	enterq $0x3d,$0x0
	...
    3fd0:	30 10                	xor    %dl,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
